"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
//================================================================ 
/** @module std */
//================================================================
var _InsertIterator_1 = require("../base/iterator/_InsertIterator");
var comparators_1 = require("../functional/comparators");
/**
 * Front insert iterator.
 *
 * @author Jeongho Nam <http://samchon.org>
 */
var FrontInsertIterator = /** @class */ (function (_super) {
    __extends(FrontInsertIterator, _super);
    /* ---------------------------------------------------------
        METHODS
    --------------------------------------------------------- */
    /**
     * Initializer Constructor.
     *
     * @param source The source container.
     */
    function FrontInsertIterator(source) {
        var _this = _super.call(this) || this;
        _this.source_ = source;
        return _this;
    }
    Object.defineProperty(FrontInsertIterator.prototype, "value", {
        /**
         * @inheritDoc
         */
        set: function (val) {
            this.source_.push_front(val);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @inheritDoc
     */
    FrontInsertIterator.prototype.equals = function (obj) {
        return comparators_1.equal_to(this.source_, obj.source_);
    };
    return FrontInsertIterator;
}(_InsertIterator_1._InsertIterator));
exports.FrontInsertIterator = FrontInsertIterator;
//# sourceMappingURL=FrontInsertIterator.js.map