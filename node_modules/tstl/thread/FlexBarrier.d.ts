/**
 * Flex Barrier for critical sections.
 *
 * The FlexBarrier class blocks critical sections until the downward counter to be zero. Unlike the {@link Barrier} class, FlexBarrier can re-define downward count size by custom function.
 *
 * @author Jeongho Nam <samchon@samchon.org>
 */
export declare class FlexBarrier {
    /**
     * @hidden
     */
    private cv_;
    /**
     * @hidden
     */
    private complete_;
    /**
     * @hidden
     */
    protected size_: number;
    /**
     * @hidden
     */
    private count_;
    /**
     * Initializer Constructor.
     *
     * @param size Size of the downward counter.
     * @param complete Complete function re-configuring *size* when downward count be zero. Default is a function always returning -1, which means the barrier is not reusable more.
     */
    constructor(size: number, complete?: () => number);
    arrive(n?: number): Promise<void>;
    arrive_and_wait(): Promise<void>;
    arrive_and_drop(): Promise<void>;
    wait(): Promise<void>;
}
export declare type flex_barrier = FlexBarrier;
export declare const flex_barrier: typeof FlexBarrier;
//# sourceMappingURL=FlexBarrier.d.ts.map