/** @module std.base */
import { VectorContainer } from "./VectorContainer";
import { ArrayIteratorBase, ArrayReverseIteratorBase } from "../iterator/ArrayIteratorBase";
import { ISetIterator, ISetReverseIterator } from "../iterator/ISetIterator";
import { SetContainer } from "./SetContainer";
/**
 * @hidden
 */
export declare class SetElementVector<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>>> extends VectorContainer<Key, Source, SetElementVector<Key, Unique, Source>, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>, Key> {
    private associative_;
    constructor(associative: Source);
    nth(index: number): SetElementVector.Iterator<Key, Unique, Source>;
    associative(): Source;
}
export declare namespace SetElementVector {
    class Iterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>>> extends ArrayIteratorBase<Key, Source, SetElementVector<Key, Unique, Source>, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>, Key> implements ISetIterator<Key, Unique, Source, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>> {
        /**
         * @inheritDoc
         */
        source(): Source;
        /**
         * @inheritDoc
         */
        reverse(): ReverseIterator<Key, Unique, Source>;
    }
    class ReverseIterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>>> extends ArrayReverseIteratorBase<Key, Source, SetElementVector<Key, Unique, Source>, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>, Key> implements ISetReverseIterator<Key, Unique, Source, SetElementVector.Iterator<Key, Unique, Source>, SetElementVector.ReverseIterator<Key, Unique, Source>> {
        /**
         * @hidden
         */
        protected _Create_neighbor(base: Iterator<Key, Unique, Source>): ReverseIterator<Key, Unique, Source>;
    }
}
//# sourceMappingURL=SetElementVector.d.ts.map