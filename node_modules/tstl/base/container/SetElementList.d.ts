/** @module std.base */
import { ListContainer } from "./ListContainer";
import { ISetIterator } from "../iterator/ISetIterator";
import { ListIterator } from "../iterator/ListIterator";
import { ReverseIterator as _ReverseIterator } from "../iterator/ReverseIterator";
import { SetContainer } from "./SetContainer";
/**
 * @hidden
 */
export declare class SetElementList<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, SetElementList.Iterator<Key, Unique, Source>, SetElementList.ReverseIterator<Key, Unique, Source>>> extends ListContainer<Key, Source, SetElementList.Iterator<Key, Unique, Source>, SetElementList.ReverseIterator<Key, Unique, Source>> {
    /**
     * @hidden
     */
    private associative_;
    constructor(associative: Source);
    /**
     * @hidden
     */
    protected _Create_iterator(prev: SetElementList.Iterator<Key, Unique, Source>, next: SetElementList.Iterator<Key, Unique, Source>, val: Key): SetElementList.Iterator<Key, Unique, Source>;
    associative(): Source;
}
export declare namespace SetElementList {
    class Iterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, Iterator<Key, Unique, Source>, ReverseIterator<Key, Unique, Source>>> extends ListIterator<Key, Source, Iterator<Key, Unique, Source>, ReverseIterator<Key, Unique, Source>, Key> implements ISetIterator<Key, Unique, Source, Iterator<Key, Unique, Source>, ReverseIterator<Key, Unique, Source>> {
        /**
         * @hidden
         */
        private source_;
        /**
         * @hidden
         */
        private constructor();
        /**
         * @inheritDoc
         */
        reverse(): ReverseIterator<Key, Unique, Source>;
        /**
         * @inheritDoc
         */
        source(): Source;
    }
    class ReverseIterator<Key, Unique extends boolean, Source extends SetContainer<Key, Unique, Source, Iterator<Key, Unique, Source>, ReverseIterator<Key, Unique, Source>>> extends _ReverseIterator<Key, Source, Iterator<Key, Unique, Source>, ReverseIterator<Key, Unique, Source>, Key> {
        /**
         * @hidden
         */
        protected _Create_neighbor(base: Iterator<Key, Unique, Source>): ReverseIterator<Key, Unique, Source>;
    }
}
//# sourceMappingURL=SetElementList.d.ts.map