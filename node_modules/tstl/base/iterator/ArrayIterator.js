"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
//================================================================ 
/** @module std.base */
//================================================================
var ArrayIteratorBase_1 = require("./ArrayIteratorBase");
var ArrayIterator = /** @class */ (function (_super) {
    __extends(ArrayIterator, _super);
    function ArrayIterator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @inheritDoc
     */
    ArrayIterator.prototype.reverse = function () {
        return new ArrayReverseIterator(this);
    };
    /**
     * @inheritDoc
     */
    ArrayIterator.prototype.source = function () {
        return this._Get_array();
    };
    return ArrayIterator;
}(ArrayIteratorBase_1.ArrayIteratorBase));
exports.ArrayIterator = ArrayIterator;
var ArrayReverseIterator = /** @class */ (function (_super) {
    __extends(ArrayReverseIterator, _super);
    function ArrayReverseIterator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @hidden
     */
    ArrayReverseIterator.prototype._Create_neighbor = function (base) {
        return new ArrayReverseIterator(base);
    };
    return ArrayReverseIterator;
}(ArrayIteratorBase_1.ArrayReverseIteratorBase));
exports.ArrayReverseIterator = ArrayReverseIterator;
//# sourceMappingURL=ArrayIterator.js.map