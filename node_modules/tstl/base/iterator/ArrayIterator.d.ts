/** @module std.base */
import { ArrayIteratorBase, ArrayReverseIteratorBase } from "./ArrayIteratorBase";
import { ArrayContainer } from "../container/ArrayContainer";
export declare class ArrayIterator<T, SourceT extends ArrayContainer<T, SourceT, SourceT, ArrayIterator<T, SourceT>, ArrayReverseIterator<T, SourceT>, T>> extends ArrayIteratorBase<T, SourceT, SourceT, ArrayIterator<T, SourceT>, ArrayReverseIterator<T, SourceT>, T> {
    /**
     * @inheritDoc
     */
    reverse(): ArrayReverseIterator<T, SourceT>;
    /**
     * @inheritDoc
     */
    source(): SourceT;
}
export declare class ArrayReverseIterator<T, SourceT extends ArrayContainer<T, SourceT, SourceT, ArrayIterator<T, SourceT>, ArrayReverseIterator<T, SourceT>, T>> extends ArrayReverseIteratorBase<T, SourceT, SourceT, ArrayIterator<T, SourceT>, ArrayReverseIterator<T, SourceT>, T> {
    /**
     * @hidden
     */
    protected _Create_neighbor(base: ArrayIterator<T, SourceT>): ArrayReverseIterator<T, SourceT>;
}
//# sourceMappingURL=ArrayIterator.d.ts.map