/** @module std.base */
import { _MapTree } from "./_MapTree";
import { _XTreeNode } from "./_XTreeNode";
import { UniqueMap } from "../container/UniqueMap";
import { MapElementList } from "../container/MapElementList";
/**
 * @hidden
 */
export declare class _UniqueMapTree<Key, T, Source extends UniqueMap<Key, T, Source, MapElementList.Iterator<Key, T, true, Source>, MapElementList.ReverseIterator<Key, T, true, Source>>> extends _MapTree<Key, T, true, Source> {
    constructor(source: Source, comp: (x: Key, y: Key) => boolean);
    nearest_by_key(key: Key): _XTreeNode<MapElementList.Iterator<Key, T, true, Source>> | null;
    upper_bound(key: Key): MapElementList.Iterator<Key, T, true, Source>;
}
//# sourceMappingURL=_UniqueMapTree.d.ts.map