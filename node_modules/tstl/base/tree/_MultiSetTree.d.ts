/** @module std.base */
import { _SetTree } from "./_SetTree";
import { _XTreeNode } from "./_XTreeNode";
import { MultiSet } from "../container/MultiSet";
import { SetElementList } from "../container/SetElementList";
/**
 * @hidden
 */
export declare class _MultiSetTree<Key, Source extends MultiSet<Key, Source, SetElementList.Iterator<Key, false, Source>, SetElementList.ReverseIterator<Key, false, Source>>> extends _SetTree<Key, false, Source> {
    constructor(source: Source, comp: (x: Key, y: Key) => boolean);
    insert(val: SetElementList.Iterator<Key, false, Source>): void;
    private _Nearest_by_key;
    nearest_by_key(val: Key): _XTreeNode<SetElementList.Iterator<Key, false, Source>> | null;
    upper_bound(val: Key): SetElementList.Iterator<Key, false, Source>;
}
//# sourceMappingURL=_MultiSetTree.d.ts.map