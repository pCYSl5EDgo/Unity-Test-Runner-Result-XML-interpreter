/** @module std.base */
import { _HashBuckets } from "./_HashBuckets";
import { IHashMap } from "../container/IHashMap";
import { MapElementList } from "../container/MapElementList";
/**
 * @hidden
 */
export declare class _MapHashBuckets<Key, T, Unique extends boolean, Source extends IHashMap<Key, T, Unique, Source>> extends _HashBuckets<MapElementList.Iterator<Key, T, Unique, Source>> {
    private source_;
    private hash_function_;
    private key_eq_;
    constructor(source: IHashMap<Key, T, Unique, Source>, hash: (key: Key) => number, pred: (x: Key, y: Key) => boolean);
    hash_function(): (key: Key) => number;
    key_eq(): (x: Key, y: Key) => boolean;
    find(key: Key): MapElementList.Iterator<Key, T, Unique, Source>;
    hash_index(it: MapElementList.Iterator<Key, T, Unique, Source>): number;
}
//# sourceMappingURL=_MapHashBuckets.d.ts.map