/** @module std.base */
import { _HashBuckets } from "./_HashBuckets";
import { IHashSet } from "../container/IHashSet";
import { SetElementList } from "../container/SetElementList";
/**
 * @hidden
 */
export declare class _SetHashBuckets<T, Unique extends boolean, Source extends IHashSet<T, Unique, Source>> extends _HashBuckets<SetElementList.Iterator<T, Unique, Source>> {
    private source_;
    private hash_function_;
    private key_eq_;
    constructor(source: IHashSet<T, Unique, Source>, hash: (val: T) => number, pred: (x: T, y: T) => boolean);
    hash_function(): (val: T) => number;
    key_eq(): (x: T, y: T) => boolean;
    find(val: T): SetElementList.Iterator<T, Unique, Source>;
    hash_index(it: SetElementList.Iterator<T, Unique, Source>): number;
}
//# sourceMappingURL=_SetHashBuckets.d.ts.map